apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

test {
    testLogging {
        exceptionFormat "full"
    }
}

task wrapper (type:Wrapper) {
    gradleVersion = '2.2'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    testCompile 'com.android.tools.build:gradle:1.1.0-rc1'
    testCompile 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
}

version = "1" // +android-apt.1.4

ext {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
    artifactId = 'gapt'
}

group = 'net.sf.gapt'

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from groovydoc
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

if (project.hasProperty("signing.keyId")) {
    signing {
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {

            beforeDeployment { deployment -> signing.signPom(deployment) }

            if (project.hasProperty('sonatypeUsername')) {
                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
            }
            uniqueVersion = false

            pom.project {

                parent {
                    groupId 'org.sonatype.oss'
                    artifactId 'oss-parent'
                    version '7'
                }

                name 'Gradle apt plugin'
                packaging 'jar'
                description 'A Gradle plugin that ensures Android Studio will pick up generated source from annotation processors and provides an apt configuration for them.'
                url 'http://gapt.sf.net/'

                scm {
                    url 'https://github.com/Alexander--/apt'
                    connection 'scm:git:https://github.com/Alexander--/apt.git'
                    developerConnection 'scm:git:https://github.com/Alexander--/apt.git'
                }

                licenses {
                    license {
                        name 'Unlicense'
                        url 'http://unlicense.org/UNLICENSE'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'hvisser'
                        name 'AlexanderR'
                    }
                }
            }
        }
    }
}
